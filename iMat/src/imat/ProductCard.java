/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package imat;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import javax.swing.JOptionPane;
import se.chalmers.ait.dat215.project.*;

/**
 *
 * @author jonathan
 */
public class ProductCard extends javax.swing.JPanel {
    
    private final IMatDataHandler data = IMatDataHandler.getInstance();
    
    private final Dimension IMGDIMENSION = new Dimension(294,269);
    
    private final Product p;

    /**
     * Creates new form ProductCard
     */
    public ProductCard() {
        initComponents();
        this.p = null;
    }
    
    public ProductCard(Product p) {
        initComponents();
        this.p=p;
        productImage.setIcon(data.getImageIcon(p,IMGDIMENSION));
        productUnitsLabel.setText(p.getUnitSuffix());
        productNameLabel.setText(p.getName());
        productPriceLabel.setText(p.getPrice() + " " + p.getUnit());
        this.setBackground(IMatColors.getpanelBackgroundNormal());
        this.setVisible(true);
        repaint();
        revalidate();
        if (data.isFavorite(p)) {
            favoriteButton.imageHover();
        } else {
            favoriteButton.imageNormal();
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        productImage = new javax.swing.JLabel();
        addToCartButton = new imat.ImageLabel("addToCartButton.png");
        productUnitsLabel = new javax.swing.JLabel();
        productNameLabel = new javax.swing.JLabel();
        productPriceLabel = new javax.swing.JLabel();
        addToShoppingListButton = new imat.ImageLabel("addToShoppingListButton.png");
        favoriteButton = new imat.ImageLabel("unmarkedFavButton.png", "markedFavButton.png");
        nbrOfProductsTF = new javax.swing.JTextField();
        increaseLabel = new imat.ImageLabel("checkoutPlusButton.png");
        decreaseLabel = new imat.ImageLabel("checkoutMinusButton.png");

        setForeground(IMatColors.getpanelBackgroundDark());
        setToolTipText("");
        setMaximumSize(new java.awt.Dimension(210, 227));
        setMinimumSize(new java.awt.Dimension(210, 227));
        setPreferredSize(new java.awt.Dimension(210, 227));
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                formMouseExited(evt);
            }
        });

        productImage.setMaximumSize(new java.awt.Dimension(60, 60));
        productImage.setMinimumSize(new java.awt.Dimension(60, 60));
        productImage.setPreferredSize(new java.awt.Dimension(60, 60));
        productImage.setRequestFocusEnabled(false);

        addToCartButton.setText("imageLabel1");
        addToCartButton.setToolTipText("");
        addToCartButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                addToCartButtonMouseMoved(evt);
            }
        });
        addToCartButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addToCartButtonMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addToCartButtonMouseExited(evt);
            }
        });

        productUnitsLabel.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        productUnitsLabel.setText("kg");

        productNameLabel.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        productNameLabel.setText("ProductName");

        productPriceLabel.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        productPriceLabel.setText("Price");

        addToShoppingListButton.setText("imageLabel1");
        addToShoppingListButton.setToolTipText("Lägg till produkten till en inköpslista");
        addToShoppingListButton.setMaximumSize(new java.awt.Dimension(40, 40));
        addToShoppingListButton.setMinimumSize(new java.awt.Dimension(40, 40));
        addToShoppingListButton.setPreferredSize(new java.awt.Dimension(40, 40));
        addToShoppingListButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                addToShoppingListButtonMouseMoved(evt);
            }
        });
        addToShoppingListButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addToShoppingListButtonMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addToShoppingListButtonMouseExited(evt);
            }
        });

        favoriteButton.setText("imageLabel1");
        favoriteButton.setToolTipText("Lägg till produkten som favorit");
        favoriteButton.setMaximumSize(new java.awt.Dimension(30, 30));
        favoriteButton.setMinimumSize(new java.awt.Dimension(30, 30));
        favoriteButton.setPreferredSize(new java.awt.Dimension(30, 30));
        favoriteButton.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                favoriteButtonMouseMoved(evt);
            }
        });
        favoriteButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                favoriteButtonMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                favoriteButtonMouseExited(evt);
            }
        });

        nbrOfProductsTF.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nbrOfProductsTF.setText("1");
        nbrOfProductsTF.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                nbrOfProductsTFMouseMoved(evt);
            }
        });
        nbrOfProductsTF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                nbrOfProductsTFMouseExited(evt);
            }
        });

        increaseLabel.setText("imageLabel1");
        increaseLabel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                increaseLabelMouseMoved(evt);
            }
        });
        increaseLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                increaseLabelMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                increaseLabelMouseExited(evt);
            }
        });

        decreaseLabel.setText("imageLabel1");
        decreaseLabel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                decreaseLabelMouseMoved(evt);
            }
        });
        decreaseLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                decreaseLabelMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                decreaseLabelMouseExited(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addComponent(productNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(favoriteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(addToShoppingListButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(77, 77, 77)
                            .addComponent(addToCartButton, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap())
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(productPriceLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(decreaseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(increaseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(nbrOfProductsTF, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(productUnitsLabel)
                            .addGap(9, 9, 9)))))
            .addComponent(productImage, javax.swing.GroupLayout.DEFAULT_SIZE, 443, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(productNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(favoriteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(productImage, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(productPriceLabel)
                    .addComponent(increaseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(decreaseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nbrOfProductsTF, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(productUnitsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addToCartButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addToShoppingListButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO go to the specific product panel for THIS product
    }//GEN-LAST:event_formMouseClicked

    private void addToShoppingListButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addToShoppingListButtonMouseClicked
        // TODO Add the product to the shopping lists.
    }//GEN-LAST:event_addToShoppingListButtonMouseClicked

    private void addToCartButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addToCartButtonMouseClicked
        // Add the product to the shoppingCart with the amount of products
        // that is specified by nbrOfProductsTF.
        if (this.controlNbrOfProductsTF()) {
            data.getShoppingCart().addProduct(p, Integer.parseInt(nbrOfProductsTF.getText()));
        } else {
            JOptionPane.showMessageDialog(this, "Mängd mäts i siffror bryshan");
        }
    }//GEN-LAST:event_addToCartButtonMouseClicked

    private void favoriteButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_favoriteButtonMouseClicked
        
        if(data.isFavorite(p)) {
             // Om produkten redan är favoritmarkerad -> ta bort favorit markeringen
            data.removeFavorite(p);
            favoriteButton.imageNormal();
        } else {
            //Om produkten inte är favoritmarkerad -> markera den som favorit
            data.addFavorite(p);
            favoriteButton.imageHover();
        }
    }//GEN-LAST:event_favoriteButtonMouseClicked

    private boolean controlNbrOfProductsTF() {
        
        for (int i = 0; i < nbrOfProductsTF.getText().length(); i++) {
            char a = nbrOfProductsTF.getText().charAt(i);
            if (a != '0' && a != '1' && a != '2' && a != '3' && a != '4' && a != '5' && a != '6' && a != '7' && a != '8' && a != '9') {
                return false;
            }
        }
        return true;
    }
    
    private void incProducts() {
        int products;
        if (this.controlNbrOfProductsTF()) {
            products = Integer.parseInt(nbrOfProductsTF.getText());
            products++;
            if (products == 100) {
               products = 1;
            }
        } else {
            products = 1;
        }
         nbrOfProductsTF.setText(Integer.toString(products));
    }
    
    private void decProducts() {
        int products;
        if (this.controlNbrOfProductsTF()) {
            products = Integer.parseInt(nbrOfProductsTF.getText());
            products--;
            if (products == 0) {
                products = 99;
            }
        } else {
            products = 1;
        }
        nbrOfProductsTF.setText(Integer.toString(products));
    }
    
    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
        this.setBackground(IMatColors.getpanelBackgroundLight());
    }//GEN-LAST:event_formMouseMoved

    private void formMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseExited
        this.setBackground(IMatColors.getpanelBackgroundNormal());
    }//GEN-LAST:event_formMouseExited

    private void addToShoppingListButtonMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addToShoppingListButtonMouseMoved
        this.setBackground(IMatColors.getpanelBackgroundLight());
        addToShoppingListButton.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_addToShoppingListButtonMouseMoved

    private void addToCartButtonMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addToCartButtonMouseMoved
        this.setBackground(IMatColors.getpanelBackgroundLight());
        addToCartButton.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_addToCartButtonMouseMoved

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        this.setBackground(IMatColors.getpanelBackgroundLight());
    }//GEN-LAST:event_formMouseEntered

    private void increaseLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_increaseLabelMouseClicked
        this.incProducts();
    }//GEN-LAST:event_increaseLabelMouseClicked

    private void decreaseLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_decreaseLabelMouseClicked
        this.decProducts();
    }//GEN-LAST:event_decreaseLabelMouseClicked

    private void increaseLabelMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_increaseLabelMouseMoved
        this.setBackground(IMatColors.getpanelBackgroundLight());
        increaseLabel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_increaseLabelMouseMoved

    private void increaseLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_increaseLabelMouseExited
        this.setBackground(IMatColors.getpanelBackgroundNormal());
    }//GEN-LAST:event_increaseLabelMouseExited

    private void decreaseLabelMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_decreaseLabelMouseMoved
        this.setBackground(IMatColors.getpanelBackgroundLight());
        decreaseLabel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_decreaseLabelMouseMoved

    private void decreaseLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_decreaseLabelMouseExited
        this.setBackground(IMatColors.getpanelBackgroundNormal());
    }//GEN-LAST:event_decreaseLabelMouseExited

    private void nbrOfProductsTFMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nbrOfProductsTFMouseMoved
        this.setBackground(IMatColors.getpanelBackgroundLight());
    }//GEN-LAST:event_nbrOfProductsTFMouseMoved

    private void nbrOfProductsTFMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nbrOfProductsTFMouseExited
        this.setBackground(IMatColors.getpanelBackgroundNormal());
    }//GEN-LAST:event_nbrOfProductsTFMouseExited

    private void addToCartButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addToCartButtonMouseExited
        this.setBackground(IMatColors.getpanelBackgroundNormal());
    }//GEN-LAST:event_addToCartButtonMouseExited

    private void addToShoppingListButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addToShoppingListButtonMouseExited
        this.setBackground(IMatColors.getpanelBackgroundNormal());
    }//GEN-LAST:event_addToShoppingListButtonMouseExited

    private void favoriteButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_favoriteButtonMouseExited
        this.setBackground(IMatColors.getpanelBackgroundNormal());
    }//GEN-LAST:event_favoriteButtonMouseExited

    private void favoriteButtonMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_favoriteButtonMouseMoved
        this.setBackground(IMatColors.getpanelBackgroundLight());
        favoriteButton.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_favoriteButtonMouseMoved

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private imat.ImageLabel addToCartButton;
    private imat.ImageLabel addToShoppingListButton;
    private imat.ImageLabel decreaseLabel;
    private imat.ImageLabel favoriteButton;
    private imat.ImageLabel increaseLabel;
    private javax.swing.JTextField nbrOfProductsTF;
    private javax.swing.JLabel productImage;
    private javax.swing.JLabel productNameLabel;
    private javax.swing.JLabel productPriceLabel;
    private javax.swing.JLabel productUnitsLabel;
    // End of variables declaration//GEN-END:variables
}